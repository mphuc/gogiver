<?php/** * PHPExcel * * Copyright (C) 2006 - 2014 PHPExcel * * This library is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation; either * version 2.1 of the License, or (at your option) any later version. * * This library is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA * * @category   PHPExcel * @package    PHPExcel * @copyright  Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel) * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt	LGPL * @version    1.8.0, 2014-03-02 */class ControllerReportExportCustomer extends Controller {public function exportGdMarch(){		/** Error reporting */	error_reporting(E_ALL);	ini_set('display_errors', TRUE);	ini_set('display_startup_errors', TRUE);	date_default_timezone_set('Asia/Ho_Chi_Minh');	if (PHP_SAPI == 'cli')		die('This example should only be run from a Web Browser');	/** Include PHPExcel */	require_once dirname(__FILE__) . '/PHPExcel.php';		$this->load->language('sale/customer');		$this->load->model('sale/customer');					$this -> load -> model('sale/customer');			if (isset($this->request->get['customer_id'])){			$CustomerOfNode = $this -> model_sale_customer -> getCustomOfNode($this->request->get['customer_id']);			$CustomerOfNode=explode(',', $CustomerOfNode);						unset($CustomerOfNode[0]);			//echo "<pre>"; print_r($CustomerOfNode); echo "</pre>"; die();			$arrUsername='';			foreach ($CustomerOfNode as $value) {				$arrUsername .= ','.$value;			}			$arrUsername = substr($arrUsername, 1);			$customer_march = $this -> model_sale_customer ->get_buy_pin($arrUsername);				 	foreach ($customer_march as $key => $result) {				$customers[] = array(				'customer_id'    => $result['customer_id'],				'username'  => $result['username'],				'account_holder'    => $result['account_holder'],				'pin'    => $result['pin'],				'amount'    => $result['amount']							);		}		$objPHPExcel = new PHPExcel();// Set document properties			$objPHPExcel->getProperties()->setCreator("Hoivien")							 ->setLastModifiedBy("Hoivien")							 ->setTitle("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setSubject("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setDescription($this->language->get('heading_title'))							 ->setKeywords("office 2007 openxml php")							 ->setCategory("Test result file");			$objPHPExcel->setActiveSheetIndex(0)            ->setCellValue('A4', 'STT')            ->setCellValue('B4', 'User ID')            ->setCellValue('C4', 'Tên')            ->setCellValue('D4', 'Số Pin')            ->setCellValue('E4', 'Số BTC');              $objPHPExcel->getActiveSheet()->getStyle('A4:E4')        ->applyFromArray(                array(                    'fill' => array(                        'type' => PHPExcel_Style_Fill::FILL_SOLID,                        'color' => array('rgb' => '0066FF'),                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER                    )                )            );            $styleArray = array(                'font'  => array(                    'bold'  => true,                    'color' => array('rgb' => 'FFFFFF'),                    'size'  => 12,                    'name'  => 'Arial'                ));        $objPHPExcel->getActiveSheet()->getStyle('A4:E4')->applyFromArray($styleArray);            // ->setCellValue('F4', 'Account holder')            // ->setCellValue('G4', 'Bank name')            // ->setCellValue('H4', 'Account number')            // ->setCellValue('I4', 'Branch_bank');			$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);			$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(30);			// $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(30);			// $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(30);			// $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(30);			// $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(30);			$h=0;			$n = 5;			foreach ($customer_march as $customer) {				$h++;						$objPHPExcel->getActiveSheet()->setCellValue('A'.$n,$h);				$objPHPExcel->getActiveSheet()->setCellValue('B'.$n,$customer['username']);				$objPHPExcel->getActiveSheet()->setCellValue('C'.$n,$customer['account_holder']);				$objPHPExcel->getActiveSheet()->setCellValue('D'.$n,$customer['pin']);				$objPHPExcel->getActiveSheet()->setCellValue('E'.$n,($customer['amount']/100000000));				// $objPHPExcel->getActiveSheet()->setCellValue('F'.$n,$customer['account_holder']);				// $objPHPExcel->getActiveSheet()->setCellValue('G'.$n,$customer['bank_name']);				// $objPHPExcel->getActiveSheet()->setCellValue('H'.$n,$customer['account_number']);				// $objPHPExcel->getActiveSheet()->setCellValue('I'.$n,$customer['branch_bank']);				$n++;				}			$objPHPExcel->getActiveSheet()->getStyle('N'.$n.':'.'P'.$n)			->applyFromArray(				array('font'  => array(					'bold'  => true,					'size'  => 12,					'name'  => 'Arial'				))			);			// Rename worksheet			$objPHPExcel->getActiveSheet()->setTitle($this->language->get('heading_title'));			// Set active sheet index to the first sheet, so Excel opens this as the first sheet			$objPHPExcel->setActiveSheetIndex(0);			// Redirect output to a client’s web browser (Excel5)			header('Content-Type: application/vnd.ms-excel');			header('Content-Disposition: attachment;filename="DanhSachMuaPin.xls"');			header('Cache-Control: max-age=0');			// If you're serving to IE 9, then the following may be needed			header('Cache-Control: max-age=1');			// If you're serving to IE over SSL, then the following may be needed			header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past			header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified			header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1			header ('Pragma: public'); // HTTP/1.0			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');			$objWriter->save('php://output');			exit;		 	 					}			}	public function exportgd() {/** Error reporting */error_reporting(E_ALL);ini_set('display_errors', TRUE);ini_set('display_startup_errors', TRUE);date_default_timezone_set('Europe/London');if (PHP_SAPI == 'cli')	die('This example should only be run from a Web Browser');/** Include PHPExcel */require_once dirname(__FILE__) . '/PHPExcel.php';		$this->load->language('sale/customer');		$this->load->model('sale/customer');						$results = $this -> model_sale_customer -> get_gd_current_date();			//echo "<pre>"; print_r($results); echo "</pre>"; die();			//echo "<pre>"; print_r($results); echo "</pre>"; die();		!count($results) > 0 && die('no data!');		foreach ($results as $key => $result) {				$customers[] = array(				'customer_id'    => $result['customer_id'],				'username'  => $result['username'],				'telephone'  => $result['telephone'],				'email'  => $result['email'],				'wallet'  => $result['wallet'],				'date_added'    => $result['date_added'],				'amount'    => $result['amount'],				'status'    => $result['status']							);		}// Create new PHPExcel object			$objPHPExcel = new PHPExcel();// Set document properties			$objPHPExcel->getProperties()->setCreator("Hoivien")							 ->setLastModifiedBy("Hoivien")							 ->setTitle("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setSubject("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setDescription($this->language->get('heading_title'))							 ->setKeywords("office 2007 openxml php")							 ->setCategory("Test result file");			$objPHPExcel->setActiveSheetIndex(0)            ->setCellValue('A1', 'STT')            ->setCellValue('B1', 'UserID')            ->setCellValue('C1', 'Username')            ->setCellValue('D1', 'Phone number')            ->setCellValue('E1', 'Email')            ->setCellValue('F1', 'Wallet')            ->setCellValue('G1', 'DateCreate')            ->setCellValue('H1', 'Amount')            ->setCellValue('I1', 'Status');			$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);			$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(10);			$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);			$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(20);			$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(10);			$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(10);			$h=0;			$n = 2;			foreach ($customers as $customer) {				$h++;						$objPHPExcel->getActiveSheet()->setCellValue('A'.$n,$h);				$objPHPExcel->getActiveSheet()->setCellValue('B'.$n,$customer['customer_id']);				$objPHPExcel->getActiveSheet()->setCellValue('C'.$n,$customer['username']);				$objPHPExcel->getActiveSheet()->setCellValue('D'.$n,$customer['telephone']);				$objPHPExcel->getActiveSheet()->setCellValue('E'.$n,$customer['email']);				$objPHPExcel->getActiveSheet()->setCellValue('F'.$n,$customer['wallet']);				$objPHPExcel->getActiveSheet()->setCellValue('G'.$n,$customer['date_added']);				$objPHPExcel->getActiveSheet()->setCellValue('H'.$n,($customer['amount']/100000000).' BTC');				if (intval($customer['status']) == 0) {					$status = 'Waiting';				}				if (intval($customer['status']) == 1) {					$status = 'Active';				}				if (intval($customer['status']) == 2) {					$status = 'Finish';				}				$objPHPExcel->getActiveSheet()->setCellValue('I'.$n,$status);				$n++;				}			$objPHPExcel->getActiveSheet()->getStyle('N'.$n.':'.'P'.$n)			->applyFromArray(				array('font'  => array(					'bold'  => true,					'size'  => 12,					'name'  => 'Arial'				))			);			// Rename worksheet			$objPHPExcel->getActiveSheet()->setTitle($this->language->get('heading_title'));			// Set active sheet index to the first sheet, so Excel opens this as the first sheet			$objPHPExcel->setActiveSheetIndex(0);			// Redirect output to a client’s web browser (Excel5)			header('Content-Type: application/vnd.ms-excel');			header('Content-Disposition: attachment;filename="LISTGD.xls"');			header('Cache-Control: max-age=0');			// If you're serving to IE 9, then the following may be needed			header('Cache-Control: max-age=1');			// If you're serving to IE over SSL, then the following may be needed			header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past			header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified			header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1			header ('Pragma: public'); // HTTP/1.0			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');			$objWriter->save('php://output');			exit;	}	public function exportpd() {/** Error reporting */error_reporting(E_ALL);ini_set('display_errors', TRUE);ini_set('display_startup_errors', TRUE);date_default_timezone_set('Europe/London');if (PHP_SAPI == 'cli')	die('This example should only be run from a Web Browser');/** Include PHPExcel */require_once dirname(__FILE__) . '/PHPExcel.php';		$this->load->language('sale/customer');		$this->load->model('sale/customer');						$results = $this -> model_sale_customer -> get_pd_current_date();			//echo "<pre>"; print_r($results); echo "</pre>"; die();			//echo "<pre>"; print_r($results); echo "</pre>"; die();		!count($results) > 0 && die('no data!');		foreach ($results as $key => $result) {				$customers[] = array(				'customer_id'    => $result['customer_id'],				'username'  => $result['username'],				'telephone'  => $result['telephone'],				'email'  => $result['email'],				'wallet'  => $result['wallet'],				'date_added'    => $result['date_added'],				'amount'    => $result['filled'],				'status'    => $result['status']							);		}// Create new PHPExcel object			$objPHPExcel = new PHPExcel();// Set document properties			$objPHPExcel->getProperties()->setCreator("Hoivien")							 ->setLastModifiedBy("Hoivien")							 ->setTitle("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setSubject("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setDescription($this->language->get('heading_title'))							 ->setKeywords("office 2007 openxml php")							 ->setCategory("Test result file");			$objPHPExcel->setActiveSheetIndex(0)            ->setCellValue('A1', 'STT')            ->setCellValue('B1', 'UserID')            ->setCellValue('C1', 'Username')            ->setCellValue('D1', 'Phone number')            ->setCellValue('E1', 'Email')            ->setCellValue('F1', 'Wallet')            ->setCellValue('G1', 'DateCreate')            ->setCellValue('H1', 'Amount')            ->setCellValue('I1', 'Status');			$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);			$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(10);			$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);			$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(20);			$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(30);			$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(10);			$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(10);			$h=0;			$n = 2;			foreach ($customers as $customer) {				$h++;						$objPHPExcel->getActiveSheet()->setCellValue('A'.$n,$h);				$objPHPExcel->getActiveSheet()->setCellValue('B'.$n,$customer['customer_id']);				$objPHPExcel->getActiveSheet()->setCellValue('C'.$n,$customer['username']);				$objPHPExcel->getActiveSheet()->setCellValue('D'.$n,$customer['telephone']);				$objPHPExcel->getActiveSheet()->setCellValue('E'.$n,$customer['email']);				$objPHPExcel->getActiveSheet()->setCellValue('F'.$n,$customer['wallet']);				$objPHPExcel->getActiveSheet()->setCellValue('G'.$n,$customer['date_added']);				$objPHPExcel->getActiveSheet()->setCellValue('H'.$n,($customer['amount']/100000000).' BTC');				if (intval($customer['status']) == 0) {					$status = 'Waiting';				}				if (intval($customer['status']) == 1) {					$status = 'Active';				}				if (intval($customer['status']) == 2) {					$status = 'Finish';				}				$objPHPExcel->getActiveSheet()->setCellValue('I'.$n,$status);				$n++;				}			$objPHPExcel->getActiveSheet()->getStyle('N'.$n.':'.'P'.$n)			->applyFromArray(				array('font'  => array(					'bold'  => true,					'size'  => 12,					'name'  => 'Arial'				))			);			// Rename worksheet			$objPHPExcel->getActiveSheet()->setTitle($this->language->get('heading_title'));			// Set active sheet index to the first sheet, so Excel opens this as the first sheet			$objPHPExcel->setActiveSheetIndex(0);			// Redirect output to a client’s web browser (Excel5)			header('Content-Type: application/vnd.ms-excel');			header('Content-Disposition: attachment;filename="LISTPD.xls"');			header('Cache-Control: max-age=0');			// If you're serving to IE 9, then the following may be needed			header('Cache-Control: max-age=1');			// If you're serving to IE over SSL, then the following may be needed			header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past			header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified			header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1			header ('Pragma: public'); // HTTP/1.0			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');			$objWriter->save('php://output');			exit;	}	public function xuatpin() {				error_reporting(E_ALL);		ini_set('display_errors', TRUE);		ini_set('display_startup_errors', TRUE);		date_default_timezone_set('Asia/Ho_Chi_Minh');		if (PHP_SAPI == 'cli')		die('This example should only be run from a Web Browser');		require_once dirname(__FILE__) . '/PHPExcel.php';		$date_erprot = $this -> request -> get['date'];		$date_erprot = date('Y-m-d', strtotime($date_erprot));		$this->load->language('sale/customer');		$this->load->model('sale/customer');		//update time show button		$results = $this -> model_sale_customer -> get_all_pin($date_erprot);		!count($results) > 0 && die('no data!');		$objPHPExcel = new PHPExcel();		$objPHPExcel->getProperties()->setCreator("Hoivien")						 ->setLastModifiedBy("Hoivien")						 ->setTitle("Office 2007 XLSX".$this->language->get('heading_title'))						 ->setSubject("Office 2007 XLSX".$this->language->get('heading_title'))						 ->setDescription($this->language->get('heading_title'))						 ->setKeywords("office 2007 openxml php")						 ->setCategory("Test result file");		$objPHPExcel->setActiveSheetIndex(0)		->setCellValue('A1', 'STT')		->setCellValue('B1', 'Username')		->setCellValue('C1', 'Địa chỉ ví')		->setCellValue('D1', 'Số pin')		->setCellValue('E1', 'Trạng thái')		->setCellValue('F1', 'Thời gian');         $objPHPExcel->getActiveSheet()->getStyle('A1:F1')        ->applyFromArray(                array(                    'fill' => array(                        'type' => PHPExcel_Style_Fill::FILL_SOLID,                        'color' => array('rgb' => '0066FF')                    )                )            );            $styleArray = array(                'font'  => array(                    'bold'  => true,                    'color' => array('rgb' => 'FFFFFF'),                    'size'  => 12,                    'name'  => 'Arial'                ));        $objPHPExcel->getActiveSheet()->getStyle('A1:F1')->applyFromArray($styleArray);		$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);		$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(20);		$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(30);		$h=0;		$n = 2;		$i=0;		foreach ($results as $customer) {			$i++;			$objPHPExcel->getActiveSheet()->setCellValue('A'.$n,$i);			$objPHPExcel->getActiveSheet()->setCellValue('B'.$n," ".$customer['username']);			$objPHPExcel->getActiveSheet()->setCellValue('C'.$n,$customer['input_address']);			$objPHPExcel->getActiveSheet()->setCellValue('D'.$n,$customer['pin']);			$status = ($customer['confirmations'] == 0) ? "Chưa hoàn thành" : "Đã Chuyển";			$objPHPExcel->getActiveSheet()->setCellValue('E'.$n,$status);			$objPHPExcel->getActiveSheet()->setCellValue('F'.$n, " ".date('d/m/Y H:i',strtotime($customer['date_created'])));			$n++;			}				$objPHPExcel->getActiveSheet()->getStyle('N'.$n.':'.'P'.$n)		->applyFromArray(			array('font'  => array(				'bold'  => true,				'size'  => 12,				'name'  => 'Arial'			))		);		// Rename worksheet		$objPHPExcel->getActiveSheet()->setTitle($this->language->get('heading_title'));		// Set active sheet index to the first sheet, so Excel opens this as the first sheet		$objPHPExcel->setActiveSheetIndex(0);		// Redirect output to a client’s web browser (Excel5)		date_default_timezone_set('Asia/Ho_Chi_Minh');		// Redirect output to a client’s web browser (Excel5)		header('Content-Type: application/vnd.ms-excel');		header('Content-Disposition: attachment;filename="PIN'.date('d').'_'.date('m').'_'.date('Y').'_'.date('H').'_'.date('i').'.xls"');		header('Cache-Control: max-age=0');		// If you're serving to IE 9, then the following may be needed		header('Cache-Control: max-age=1');		// If you're serving to IE over SSL, then the following may be needed		header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past		header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified		header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1		header ('Pragma: public'); // HTTP/1.0		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');		$objWriter->save('php://output');		exit;	}}